{
	"name": "pl_transform_funds_quotes",
	"properties": {
		"activities": [
			{
				"name": "Take transform quotes pipeline last run",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://management.azure.com/subscriptions/4d2b06c4-43c3-4174-ae4f-7cd2d52bdae2/resourceGroups/investment-funds/providers/Microsoft.DataFactory/factories/adf-investment-funds/queryPipelineRuns?api-version=2018-06-01",
					"body": {
						"lastUpdatedAfter": "2022-06-16T00:36:44.3345758Z",
						"lastUpdatedBefore": "2024-08-16T00:49:48.3686473Z",
						"filters": [
							{
								"operand": "PipelineName",
								"operator": "Equals",
								"values": [
									"pl_ingestion_if_register"
								]
							},
							{
								"operand": "Status",
								"operator": "Equals",
								"values": [
									"Succeeded"
								]
							}
						],
						"orderBy": [
							{
								"order": "DESC",
								"orderBy": "RunEnd"
							}
						]
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://management.azure.com"
					}
				}
			},
			{
				"name": "Set last pipeline run date to variable",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Take transform quotes pipeline last run",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "transform_quotes_pipeline_last_run",
					"value": {
						"value": "@activity('Web1').output.value[0].lastUpdated",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get files from raw container",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_get_last_modified_raw",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get files from raw container",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get files from raw container').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get last modifieid date from raw container",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_get_metadata_adls_raw",
									"type": "DatasetReference",
									"parameters": {
										"raw_adls_file_name": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Append variable1",
							"type": "AppendVariable",
							"dependsOn": [
								{
									"activity": "Get last modifieid date from raw container",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "raw_container_last_modified",
								"value": {
									"value": "@activity('Get Metadata2').output.lastModified",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "If there are new files",
				"type": "IfCondition",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set last pipeline run date to variable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(last(variables('raw_container_last_modified')),variables('transform_quotes_pipeline_last_run'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Lookup for actual CVM file links",
							"type": "Lookup",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"dataset": {
									"referenceName": "ds_cvm_actual_quotes_links",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Copy investment funds actual quotes for every month",
							"type": "ForEach",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Lookup for actual CVM file links",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Lookup for actual CVM file links').output.value",
									"type": "Expression"
								},
								"isSequential": true,
								"activities": [
									{
										"name": "Parse files in datalake",
										"type": "GetMetadata",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "ds_cvm_if_csv_adls",
												"type": "DatasetReference",
												"parameters": {
													"fileName": {
														"value": "@concat(item().url,'.csv')",
														"type": "Expression"
													},
													"raw_folder": "investment-funds-quotes"
												}
											},
											"fieldList": [
												"exists",
												"lastModified"
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										}
									},
									{
										"name": "If file exists or source date is greater then timestamp",
										"type": "IfCondition",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [
											{
												"activity": "Parse files in datalake",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"expression": {
												"value": "@or(and(equals(activity('Parse files in datalake').output.exists,true),greater(formatDateTime(item().update,'yyyy-MM-ddTHH:mm:ss.fffffffK'),convertTimeZone(formatDateTime(activity('Parse files in datalake').output.lastModified,'yyyy-MM-ddTHH:mm:ss.fffffffK'),'UTC','E. South America Standard Time'))),equals(activity('Parse files in datalake').output.exists,false))",
												"type": "Expression"
											},
											"ifTrueActivities": [
												{
													"name": "Copy data from http binary actual quotes",
													"type": "Copy",
													"dependsOn": [],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 1,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "BinarySource",
															"storeSettings": {
																"type": "HttpReadSettings",
																"requestMethod": "GET"
															},
															"formatSettings": {
																"type": "BinaryReadSettings",
																"compressionProperties": {
																	"type": "ZipDeflateReadSettings"
																}
															}
														},
														"sink": {
															"type": "BinarySink",
															"storeSettings": {
																"type": "AzureBlobFSWriteSettings"
															}
														},
														"enableStaging": false
													},
													"inputs": [
														{
															"referenceName": "ds_cvm_if_links_binary_http",
															"type": "DatasetReference",
															"parameters": {
																"relativeURL": {
																	"value": "@concat(variables('file_name'),'.zip')",
																	"type": "Expression"
																}
															}
														}
													],
													"outputs": [
														{
															"referenceName": "ds_cvm_if_links_binary_adls",
															"type": "DatasetReference",
															"parameters": {
																"relativeURL": {
																	"value": "@concat(variables('file_name'),'.zip')",
																	"type": "Expression"
																}
															}
														}
													]
												},
												{
													"name": "Copy data from zipped binary to csv",
													"type": "Copy",
													"dependsOn": [
														{
															"activity": "Copy data from http binary actual quotes",
															"dependencyConditions": [
																"Succeeded"
															]
														}
													],
													"policy": {
														"timeout": "0.12:00:00",
														"retry": 0,
														"retryIntervalInSeconds": 30,
														"secureOutput": false,
														"secureInput": false
													},
													"userProperties": [],
													"typeProperties": {
														"source": {
															"type": "DelimitedTextSource",
															"additionalColumns": [
																{
																	"name": "ingestion_timestamp",
																	"value": {
																		"value": "@variables('timestamp')",
																		"type": "Expression"
																	}
																}
															],
															"storeSettings": {
																"type": "AzureBlobFSReadSettings",
																"recursive": true,
																"enablePartitionDiscovery": false
															},
															"formatSettings": {
																"type": "DelimitedTextReadSettings",
																"compressionProperties": {
																	"type": "ZipDeflateReadSettings"
																}
															}
														},
														"sink": {
															"type": "DelimitedTextSink",
															"storeSettings": {
																"type": "AzureBlobFSWriteSettings"
															},
															"formatSettings": {
																"type": "DelimitedTextWriteSettings",
																"quoteAllText": true,
																"fileExtension": ".txt"
															}
														},
														"enableStaging": false,
														"translator": {
															"type": "TabularTranslator",
															"typeConversion": true,
															"typeConversionSettings": {
																"allowDataTruncation": true,
																"treatBooleanAsNumber": false
															}
														}
													},
													"inputs": [
														{
															"referenceName": "ds_cvm_if_zip_adls",
															"type": "DatasetReference",
															"parameters": {
																"fileName": {
																	"value": "@concat(variables('file_name'),'.zip')",
																	"type": "Expression"
																}
															}
														}
													],
													"outputs": [
														{
															"referenceName": "ds_cvm_if_csv_adls",
															"type": "DatasetReference",
															"parameters": {
																"fileName": {
																	"value": "@concat(variables('file_name'),'.csv')",
																	"type": "Expression"
																},
																"raw_folder": "investment-funds-quotes"
															}
														}
													]
												}
											]
										}
									},
									{
										"name": "File_name",
										"type": "SetVariable",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "file_name",
											"value": {
												"value": "@item().url",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set file timestamp",
										"type": "SetVariable",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "timestamp",
											"value": {
												"value": "@split(item().update,' ')[0]",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"transform_quotes_pipeline_last_run": {
				"type": "String"
			},
			"raw_container_last_modified": {
				"type": "Array"
			},
			"new_files_to_transform": {
				"type": "Boolean"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-08-13T23:35:41Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}